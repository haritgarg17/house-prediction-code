import numpy as np
from sklearn.linear_model import LinearRegression

# Create a Linear Regression model
model = LinearRegression()

# Define feature names and initialize feature values with user input
feature_names = ['bedrooms', 'bathrooms', 'area_sqft', 'garage', 'year_built']
features = []

for feature_name in feature_names:
    if feature_name == 'area_sqft':
        feature_value = float(input("Enter the area in square feet: "))
    else:
        feature_value = float(input(f"Enter the number of {feature_name}: "))
    features.append(feature_value)

# Convert the area from square feet to square meters (if needed)
area_sqft = features[2]
area_sqm = area_sqft * 0.092903  # Conversion factor: 1 sqft = 0.092903 sqm
features[2] = area_sqm

# Reshape the features into a numpy array
features = np.array(features).reshape(1, -1)

# Train the model with your dataset (Replace this with your actual dataset)
# X_train, y_train = ...

# Fit the model to the training data
# model.fit(X_train, y_train)

# For demonstration purposes, I'll create some dummy data and fit the model
# You should replace this with your actual dataset and training code

# Dummy data
X_train = np.array([[3, 2, 167.22, 2, 2005],  # 1800 sqft converted to sqm
                    [4, 3, 204.38, 2, 1998],  # 2200 sqft converted to sqm
                    [2, 1, 111.48, 1, 2010]])  # 1200 sqft converted to sqm
y_train = np.array([300000, 400000, 250000])

# Fit the model to the dummy data (Replace this with your actual training code)
model.fit(X_train, y_train)

# Make predictions for the user's input
predicted_price = model.predict(features)

# Ensure the predicted price is non-negative
predicted_price = abs(predicted_price)

# Display the predicted price
print(f"Predicted Price: ${predicted_price[0]:,.2f}")
